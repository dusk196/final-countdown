@use '~@angular/material'as mat;

@include mat.core();

// Define a warn theme
$warn : mat.define-palette(mat.$red-palette);

// Define a light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent : mat.define-palette(mat.$pink-palette);

$light-theme : mat.define-light-theme((color: (primary: $light-primary, accent: $light-accent, warn: $warn)));

// Define a dark theme
$dark-primary: mat.define-palette(mat.$purple-palette);
$dark-accent : mat.define-palette(mat.$amber-palette);

$dark-theme : mat.define-dark-theme((color: (primary: $dark-primary, accent: $dark-accent, warn: $warn)));

// Apply the dark theme by default
@include mat.all-component-themes($dark-theme);

:root {
  --white1: #FFFFFF;
  --white2: #EFEFEF;
  --black1: #000000;
  --black2: #222222;
  --black3: #424242;
  --black4: #0A090C;
}

html,
body {
  height: 100%;
}

body {
  margin          : 0;
  font-family     : Roboto, "Helvetica Neue", sans-serif;
  background-color: var(--black2);
}

section {
  margin: 20px;
}

// Apply the light theme only when the `.light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.light-theme {

  @include mat.all-component-colors($light-theme);
  background-color: var(--white1);

  footer {

    color: var(--black2) !important;

    a {
      color: var(--black2) !important;
    }

  }

  mat-drawer {
    background-color: var(--white1) !important;
  }

  mat-drawer-content {
    background-color: var(--white1) !important;
  }

  .event {
    background: var(--white2) !important;
    color     : var(--black2) !important;
  }

  .event-list {
    background: var(--white1) !important;
  }

  .cdk-drag-placeholder {
    background-color: var(--white1) !important;
    color           : var(--white1) !important;
    opacity         : 1 !important;
  }

}

.cdk-drag-placeholder {
  background-color: var(--black2) !important;
  color           : var(--black2) !important;
  opacity         : 1 !important;
}